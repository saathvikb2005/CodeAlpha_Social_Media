{"ast":null,"code":"var _jsxFileName = \"D:\\\\INTERNSHIPS\\\\CODEALPHA\\\\Social_Media\\\\social-frontend\\\\src\\\\pages\\\\CreatePostPage.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/CreatePostPage.jsx\nimport React, { useState } from 'react';\nimport axios from '../api/axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/CreatePostPage.css'; // adjust path if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePostPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [caption, setCaption] = useState('');\n  const [image, setImage] = useState(null);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    if (!image) {\n      setError('Please select an image.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('caption', caption);\n    formData.append('image', image);\n    try {\n      const token = localStorage.getItem('access');\n      const response = await axios.post('/posts/', formData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Post created:', response.data);\n      setSuccess('Post created successfully!');\n      setCaption('');\n      setImage(null);\n      setTimeout(() => {\n        navigate('/feed');\n      }, 1000);\n    } catch (err) {\n      var _err$response, _err$response2, _err$response2$data;\n      console.error('Upload error:', err);\n      console.error('Upload error data:', (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.detail) || 'Failed to create post');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-post-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Caption\",\n        value: caption,\n        onChange: e => setCaption(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: e => setImage(e.target.files[0]),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePostPage, \"TfYSKiytI1WIWNDa6ZqoYWI3V1g=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePostPage;\nexport default CreatePostPage;\nvar _c;\n$RefreshReg$(_c, \"CreatePostPage\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","CreatePostPage","_s","navigate","caption","setCaption","image","setImage","error","setError","success","setSuccess","handleSubmit","e","preventDefault","formData","FormData","append","token","localStorage","getItem","response","post","headers","Authorization","console","log","data","setTimeout","err","_err$response","_err$response2","_err$response2$data","detail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","accept","files","style","color","_c","$RefreshReg$"],"sources":["D:/INTERNSHIPS/CODEALPHA/Social_Media/social-frontend/src/pages/CreatePostPage.jsx"],"sourcesContent":["// frontend/src/pages/CreatePostPage.jsx\r\nimport React, { useState } from 'react';\r\nimport axios from '../api/axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/CreatePostPage.css'; // adjust path if needed\r\n\r\n\r\nconst CreatePostPage = () => {\r\n  const navigate = useNavigate();\r\n  const [caption, setCaption] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    if (!image) {\r\n      setError('Please select an image.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('caption', caption);\r\n    formData.append('image', image);\r\n\r\n    try {\r\n      const token = localStorage.getItem('access');\r\n      const response = await axios.post('/posts/', formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      console.log('Post created:', response.data);\r\n      setSuccess('Post created successfully!');\r\n      setCaption('');\r\n      setImage(null);\r\n\r\n      setTimeout(() => {\r\n        navigate('/feed');\r\n      }, 1000);\r\n    } catch (err) {\r\n      console.error('Upload error:', err);\r\n      console.error('Upload error data:', err.response?.data);\r\n      setError(err.response?.data?.detail || 'Failed to create post');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-post-page\">\r\n      <h2>Create New Post</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Caption\"\r\n          value={caption}\r\n          onChange={(e) => setCaption(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={(e) => setImage(e.target.files[0])}\r\n          required\r\n        />\r\n        <button type=\"submit\">Post</button>\r\n      </form>\r\n      {success && <p style={{ color: 'green' }}>{success}</p>}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePostPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}